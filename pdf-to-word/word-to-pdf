<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PDF â†” Word Converter | Multi-Tool</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdf-lib/1.16.0/pdf-lib.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/mammoth/1.4.0/mammoth.browser.min.js"></script>
    <style>
        :root {
            --primary-color: #0066ff;
            --secondary-color: #e6f0ff;
            --accent-color: #0047b3;
            --text-color: #333;
            --light-color: #fff;
            --shadow: 0 4px 12px rgba(0, 102, 255, 0.1);
        }

        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: #f5f9ff;
            color: var(--text-color);
            line-height: 1.6;
        }

        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }

        header {
            text-align: center;
            margin-bottom: 30px;
        }

        h1 {
            color: var(--primary-color);
            margin-bottom: 10px;
        }

        .description {
            color: #666;
            margin-bottom: 20px;
        }

        .converter-card {
            background-color: var(--light-color);
            border-radius: 10px;
            box-shadow: var(--shadow);
            padding: 30px;
            margin-bottom: 20px;
        }

        .converter-header {
            display: flex;
            justify-content: space-between;
            margin-bottom: 20px;
            border-bottom: 1px solid #eee;
            padding-bottom: 15px;
        }

        .converter-tabs {
            display: flex;
            gap: 10px;
        }

        .tab-btn {
            padding: 8px 16px;
            background-color: var(--secondary-color);
            border: none;
            border-radius: 5px;
            color: var(--primary-color);
            cursor: pointer;
            font-weight: 600;
            transition: all 0.3s ease;
        }

        .tab-btn.active {
            background-color: var(--primary-color);
            color: var(--light-color);
        }

        .tab-btn:hover {
            background-color: var(--accent-color);
            color: var(--light-color);
        }

        .upload-area {
            border: 2px dashed var(--primary-color);
            border-radius: 8px;
            padding: 40px 20px;
            text-align: center;
            cursor: pointer;
            transition: all 0.3s ease;
            background-color: var(--secondary-color);
            margin-bottom: 20px;
        }

        .upload-area:hover {
            background-color: rgba(0, 102, 255, 0.1);
        }

        .upload-area i {
            font-size: 48px;
            color: var(--primary-color);
            margin-bottom: 15px;
        }

        .upload-area p {
            margin-bottom: 15px;
            color: var(--primary-color);
            font-weight: 500;
        }

        .upload-area input {
            display: none;
        }

        .file-info {
            margin-top: 15px;
            font-size: 14px;
            color: #666;
        }

        .progress-container {
            display: none;
            margin: 20px 0;
        }

        .progress-bar {
            height: 10px;
            background-color: #e0e0e0;
            border-radius: 5px;
            overflow: hidden;
            margin-bottom: 10px;
        }

        .progress {
            height: 100%;
            background-color: var(--primary-color);
            width: 0%;
            transition: width 0.3s ease;
        }

        .progress-text {
            text-align: center;
            color: #666;
            font-size: 14px;
        }

        .btn {
            background-color: var(--primary-color);
            color: var(--light-color);
            border: none;
            padding: 12px 24px;
            border-radius: 5px;
            cursor: pointer;
            font-weight: 600;
            font-size: 16px;
            transition: all 0.3s ease;
            width: 100%;
            margin-top: 10px;
        }

        .btn:hover {
            background-color: var(--accent-color);
        }

        .btn:disabled {
            background-color: #ccc;
            cursor: not-allowed;
        }

        .download-area {
            display: none;
            text-align: center;
            margin-top: 20px;
            padding: 20px;
            background-color: var(--secondary-color);
            border-radius: 8px;
        }

        .download-area a {
            display: inline-block;
            margin-top: 15px;
            color: var(--primary-color);
            text-decoration: none;
            font-weight: 600;
        }

        .download-area a:hover {
            text-decoration: underline;
        }

        .error-message {
            color: #ff3333;
            margin-top: 10px;
            text-align: center;
            display: none;
        }

        @media (max-width: 600px) {
            .container {
                padding: 15px;
            }

            .converter-card {
                padding: 20px;
            }

            .converter-header {
                flex-direction: column;
                gap: 15px;
            }

            .converter-tabs {
                justify-content: center;
            }

            .btn {
                padding: 10px 20px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <h1>PDF â†” Word Converter</h1>
            <p class="description">Easily convert between PDF and Word documents with our free online tool</p>
        </header>

        <div class="converter-card">
            <div class="converter-header">
                <div class="converter-tabs">
                    <button class="tab-btn active" id="pdfToWordBtn">PDF to Word</button>
                    <button class="tab-btn" id="wordToPdfBtn">Word to PDF</button>
                </div>
            </div>

            <div class="upload-area" id="uploadArea">
                <i>ðŸ“„</i>
                <p id="uploadText">Drag & drop your PDF file here or click to browse</p>
                <input type="file" id="fileInput" accept=".pdf,.doc,.docx">
                <div class="file-info" id="fileInfo"></div>
            </div>

            <div class="error-message" id="errorMessage"></div>

            <div class="progress-container" id="progressContainer">
                <div class="progress-bar">
                    <div class="progress" id="progressBar"></div>
                </div>
                <div class="progress-text" id="progressText">Processing...</div>
            </div>

            <button class="btn" id="convertBtn" disabled>Convert</button>

            <div class="download-area" id="downloadArea">
                <p>Your file has been converted successfully!</p>
                <a href="#" id="downloadLink">Download Converted File</a>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // DOM Elements
            const pdfToWordBtn = document.getElementById('pdfToWordBtn');
            const wordToPdfBtn = document.getElementById('wordToPdfBtn');
            const uploadArea = document.getElementById('uploadArea');
            const uploadText = document.getElementById('uploadText');
            const fileInput = document.getElementById('fileInput');
            const fileInfo = document.getElementById('fileInfo');
            const convertBtn = document.getElementById('convertBtn');
            const progressContainer = document.getElementById('progressContainer');
            const progressBar = document.getElementById('progressBar');
            const progressText = document.getElementById('progressText');
            const downloadArea = document.getElementById('downloadArea');
            const downloadLink = document.getElementById('downloadLink');
            const errorMessage = document.getElementById('errorMessage');

            // State variables
            let currentMode = 'pdfToWord';
            let selectedFile = null;

            // Event Listeners
            pdfToWordBtn.addEventListener('click', () => switchMode('pdfToWord'));
            wordToPdfBtn.addEventListener('click', () => switchMode('wordToPdf'));

            uploadArea.addEventListener('click', () => fileInput.click());
            uploadArea.addEventListener('dragover', (e) => {
                e.preventDefault();
                uploadArea.style.backgroundColor = 'rgba(0, 102, 255, 0.2)';
            });
            uploadArea.addEventListener('dragleave', () => {
                uploadArea.style.backgroundColor = '';
            });
            uploadArea.addEventListener('drop', (e) => {
                e.preventDefault();
                uploadArea.style.backgroundColor = '';
                if (e.dataTransfer.files.length) {
                    handleFileSelection(e.dataTransfer.files[0]);
                }
            });

            fileInput.addEventListener('change', () => {
                if (fileInput.files.length) {
                    handleFileSelection(fileInput.files[0]);
                }
            });

            convertBtn.addEventListener('click', convertFile);

            // Functions
            function switchMode(mode) {
                currentMode = mode;
                if (mode === 'pdfToWord') {
                    pdfToWordBtn.classList.add('active');
                    wordToPdfBtn.classList.remove('active');
                    uploadText.textContent = 'Drag & drop your PDF file here or click to browse';
                    fileInput.setAttribute('accept', '.pdf');
                } else {
                    pdfToWordBtn.classList.remove('active');
                    wordToPdfBtn.classList.add('active');
                    uploadText.textContent = 'Drag & drop your Word file here or click to browse';
                    fileInput.setAttribute('accept', '.doc,.docx');
                }
                
                // Reset state
                resetConverter();
            }

            function handleFileSelection(file) {
                // Validate file type
                const validExtensions = currentMode === 'pdfToWord' 
                    ? ['.pdf'] 
                    : ['.doc', '.docx'];
                
                const fileExt = '.' + file.name.split('.').pop().toLowerCase();
                
                if (!validExtensions.includes(fileExt)) {
                    showError(`Please select a ${currentMode === 'pdfToWord' ? 'PDF' : 'Word'} file`);
                    return;
                }
                
                hideError();
                selectedFile = file;
                fileInfo.textContent = `Selected file: ${file.name} (${formatFileSize(file.size)})`;
                convertBtn.disabled = false;
            }

            function formatFileSize(bytes) {
                if (bytes === 0) return '0 Bytes';
                const k = 1024;
                const sizes = ['Bytes', 'KB', 'MB', 'GB'];
                const i = Math.floor(Math.log(bytes) / Math.log(k));
                return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
            }

            function showError(message) {
                errorMessage.textContent = message;
                errorMessage.style.display = 'block';
                selectedFile = null;
                fileInfo.textContent = '';
                convertBtn.disabled = true;
            }

            function hideError() {
                errorMessage.style.display = 'none';
            }

            function resetConverter() {
                selectedFile = null;
                fileInput.value = '';
                fileInfo.textContent = '';
                convertBtn.disabled = true;
                progressContainer.style.display = 'none';
                downloadArea.style.display = 'none';
                hideError();
            }

            function updateProgress(percent) {
                progressBar.style.width = percent + '%';
                progressText.textContent = `Processing... ${percent}%`;
            }

            function convertFile() {
                if (!selectedFile) {
                    showError('Please select a file first');
                    return;
                }

                // Show progress
                progressContainer.style.display = 'block';
                convertBtn.disabled = true;
                updateProgress(0);

                // Simulate progress (in a real app, this would be actual conversion progress)
                const progressInterval = setInterval(() => {
                    const currentProgress = parseInt(progressBar.style.width) || 0;
                    if (currentProgress < 90) {
                        updateProgress(currentProgress + 10);
                    }
                }, 300);

                // Perform conversion (simulated with setTimeout)
                setTimeout(() => {
                    clearInterval(progressInterval);
                    updateProgress(100);
                    
                    // In a real implementation, you would:
                    // 1. For PDF to Word: Use pdf-lib to extract text and create a Word doc
                    // 2. For Word to PDF: Use mammoth to convert Word to HTML, then generate PDF
                    
                    // For this demo, we'll simulate the conversion result
                    simulateConversionResult();
                }, 2000);
            }

            function simulateConversionResult() {
                // Create a dummy download link
                const outputFilename = selectedFile.name.replace(/\.[^/.]+$/, '') + 
                                     (currentMode === 'pdfToWord' ? '.docx' : '.pdf');
                
                // In a real implementation, you would generate the actual file here
                // For demo purposes, we'll just create a dummy blob
                const dummyContent = `This is a simulated ${currentMode === 'pdfToWord' ? 'Word' : 'PDF'} file. 
                    In a real implementation, this would be the converted file content.`;
                
                const blob = new Blob([dummyContent], { type: currentMode === 'pdfToWord' ? 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' : 'application/pdf' });
                const url = URL.createObjectURL(blob);
                
                downloadLink.href = url;
                downloadLink.download = outputFilename;
                downloadArea.style.display = 'block';
                
                // Scroll to download area
                downloadArea.scrollIntoView({ behavior: 'smooth' });
            }

            // For a real implementation, you would need to:
            // 1. Integrate with a PDF library like pdf-lib (https://pdf-lib.js.org/)
            // 2. For Word to PDF, you might use mammoth.js (https://github.com/mwilliamson/mammoth.js)
            // 3. Or use a backend service for more reliable conversions
        });
    </script>
</body>
</html>
